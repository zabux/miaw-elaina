import { tf } from './dependencies.generated';
import { CheckValidEnvironment } from './types';
export declare const getEnvironmentDisallowsStringInput: () => Error;
export declare const getEnvironmentDisallowsBase64: () => Error;
export declare const getInvalidTensorError: (input: tf.Tensor) => Error;
export declare const getInvalidImageError: () => Error;
export declare const loadImage: (src: string) => Promise<HTMLImageElement>;
export declare type Input = tf.Tensor3D | tf.Tensor4D | string | tf.FromPixelsInputs['pixels'];
export declare const getImageAsTensor: (input: Input) => Promise<tf.Tensor4D>;
export declare const isHTMLImageElement: (pixels: Input) => pixels is HTMLImageElement;
export declare const tensorAsBase64: (tensor: tf.Tensor3D) => string;
export declare const checkValidEnvironment: CheckValidEnvironment<Input>;
//# sourceMappingURL=image.generated.d.ts.map