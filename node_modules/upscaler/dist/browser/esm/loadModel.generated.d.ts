import { tf } from './dependencies.generated';
import { ModelDefinition } from '@upscalerjs/core';
import type { ModelPackage, PackageInformation } from './types';
declare type CDN = 'jsdelivr' | 'unpkg';
declare type CdnFn = (packageName: string, version: string, path: string) => string;
declare type Errors = [CDN, Error][];
export declare const CDN_PATH_DEFINITIONS: {
    [key in CDN]: CdnFn;
};
export declare const CDNS: CDN[];
export declare const getLoadModelErrorMessage: (modelPath: string, packageInformation: PackageInformation, errs: Errors) => Error;
export declare const fetchModel: ({ path, modelType, packageInformation, }: ModelDefinition) => Promise<tf.LayersModel | tf.GraphModel>;
export declare const loadModel: (modelDefinition: ModelDefinition) => Promise<ModelPackage>;
export {};
//# sourceMappingURL=loadModel.generated.d.ts.map