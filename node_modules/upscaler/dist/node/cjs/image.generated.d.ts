/// <reference types="node" />
import { tf } from './dependencies.generated';
import { CheckValidEnvironment } from './types';
export declare const getInvalidTensorError: (input: tf.Tensor) => Error;
export declare const getInvalidInput: (input: unknown) => Error;
export declare const getInvalidImageSrcInput: (input: string) => Error;
export declare const getInvalidChannelsOfTensor: (input: tf.Tensor) => Error;
export declare type Input = tf.Tensor3D | tf.Tensor4D | string | Uint8Array | Buffer;
export declare const getImageAsTensor: (input: Input) => Promise<tf.Tensor4D>;
export declare const tensorAsBase64: (tensor: tf.Tensor3D) => string;
export declare const checkValidEnvironment: CheckValidEnvironment<Input>;
//# sourceMappingURL=image.generated.d.ts.map